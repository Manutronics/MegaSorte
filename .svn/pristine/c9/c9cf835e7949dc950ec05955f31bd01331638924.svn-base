#include "pastraffle.h"
#include <QDebug>

PastRaffle::PastRaffle()
{
    QString name("../ColorSlider/dataBase.sqlite");
    db = QSqlDatabase::addDatabase("QSQLITE");
    db.setDatabaseName(name);
    if(db.open())
    {
        qDebug() << "Conectado a base de dados";
    }
    else
    {
        qDebug() << "Não conectado a base de dados";
    }
    tableCreate();
    QVector<int> vec = {12, 34, 21, 45, 6, 9};
//    insertNumbers(vec);
    vec.clear();
    vec = pickNumbers(2);
    qDebug() << vec;
}

void PastRaffle::tableCreate()
{
    QString enquiry;
    enquiry.append("CREATE TABLE IF NOT EXISTS rafflenumbs("
                 "id INTEGER PRIMARY KEY AUTOINCREMENT,"
                 "firstColumn INTEGER NOT NULL,"
                 "secondColumn INTEGER NOT NULL,"
                 "thirdColumn INTEGER NOT NULL,"
                 "fourthColumn INTEGER NOT NULL,"
                 "fifthColumn INTEGER NOT NULL,"
                 "sixthColumn INTEGER NOT NULL,"
                 "date DATETIME NOT NULL"
                 ");");
    QSqlQuery query;
    query.prepare(enquiry);

    if(query.exec())
    {
        qDebug() << "Tabela criada com sucesso!";
    }
    else
    {
        qDebug() << "A tabela rafflenumbs não existe e/ou não foi criada corretamente";
        qDebug() << "ERROR ->" << query.lastError();
    }
}

void PastRaffle::insertNumbers(QVector<int> &nums)
{
    QString enquiry;
    enquiry.append("INSERT INTO rafflenumbs("
                 "firstColumn,"
                 "secondColumn,"
                 "thirdColumn,"
                 "fourthColumn,"
                 "fifthColumn,"
                 "sixthColumn,"
                 "date)");
    enquiry.append(QString("VALUES(%1, %2, %3, %4, %5, %6, '2007-01-01 10:00:00');").arg(nums[0])
            .arg(nums[1]).arg(nums[2]).arg(nums[3]).arg(nums[4]).arg(nums[5]));
    QSqlQuery insertQuery;
    insertQuery.prepare(enquiry);

    if(insertQuery.exec())
    {
        qDebug() << "Linha inserida com sucesso!";
    }
    else
    {
        qDebug() << "Não foi possivel inserir linha corretamente";
        qDebug() << "ERROR ->" << insertQuery.lastError();
    }
}

QVector<int> PastRaffle::pickAllNumbers()
{
    QString enquiry;
    enquiry.append("SELECT * FROM rafflenumbs");

    QSqlQuery retrieveQuery;
    retrieveQuery.prepare(enquiry);

    if(retrieveQuery.exec())
    {
        qDebug() << "COnsulta realizada com sucesso!";
    }
    else
    {
        qDebug() << "Não foi possivel consultar linha corretamente";
        qDebug() << "ERROR ->" << retrieveQuery.lastError();
    }

    QVector<int> temp;

    while(retrieveQuery.next())
    {
        temp.append(retrieveQuery.value(1).toInt());
        temp.append(retrieveQuery.value(2).toInt());
        temp.append(retrieveQuery.value(3).toInt());
        temp.append(retrieveQuery.value(4).toInt());
        temp.append(retrieveQuery.value(5).toInt());
        temp.append(retrieveQuery.value(6).toInt());
    }
    return temp;
}

QVector<int> PastRaffle::pickNumbers(int line)
{
    QString enquiry;
    enquiry.append(QString("SELECT * FROM rafflenumbs WHERE id=%1").arg(line));

    QSqlQuery retrieveQuery;
    retrieveQuery.prepare(enquiry);

    if(retrieveQuery.exec())
    {
        qDebug() << "Consulta unica realizada com sucesso!";
    }
    else
    {
        qDebug() << "Não foi possivel consultar linha corretamente";
        qDebug() << "ERROR ->" << retrieveQuery.lastError();
    }

    QVector<int> temp;
    if(retrieveQuery.first())
    {
        temp.append(retrieveQuery.value(1).toInt());
        temp.append(retrieveQuery.value(2).toInt());
        temp.append(retrieveQuery.value(3).toInt());
        temp.append(retrieveQuery.value(4).toInt());
        temp.append(retrieveQuery.value(5).toInt());
        temp.append(retrieveQuery.value(6).toInt());
    }

    return temp;
}
